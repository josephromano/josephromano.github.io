(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    262964,       5031]
NotebookOptionsPosition[    260660,       4965]
NotebookOutlinePosition[    261147,       4984]
CellTagsIndexPosition[    261104,       4981]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"pure", " ", "rotation"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"detector", " ", "locations"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x1", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x2", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "unit", " ", "vectors", " ", "along", " ", "the", " ", "IFO", " ", 
     "arms"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"both", " ", "arms", " ", "in", " ", "rotational", " ", "plane"}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u1", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v1", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"u2", "=", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Delta]", "]"}], ",", 
        RowBox[{"Sin", "[", "\[Delta]", "]"}], ",", " ", "0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v2", "=", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Delta]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[Delta]", "]"}], ",", " ", "0"}], "}"}]}], 
     ";"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"one", " ", "arm", " ", "in", " ", "rotational", " ", "plane"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u2", "=", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Delta]", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[Delta]", "]"}], ",", " ", "0"}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2", "=", 
     RowBox[{"{", " ", 
      RowBox[{"0", ",", "0", ",", " ", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"detector", " ", "tensors"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d1", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "u1", ",", "u1"}], "]"}], " ", "-", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "v1", ",", "v1"}], "]"}]}], ")"}], "/", 
      "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "u2", ",", "u2"}], "]"}], " ", "-", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "v2", ",", "v2"}], "]"}]}], ")"}], "/", 
      "2"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"separation", " ", "vector"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"s", " ", "=", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x1", "-", "x2"}], ")"}], "/", 
         RowBox[{"Norm", "[", 
          RowBox[{"x1", " ", "-", " ", "x2"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", 
          RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ";"}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", " ", "=", " ", 
     RowBox[{"Norm", "[", 
      RowBox[{"x1", "-", "x2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"overlap", " ", "expression"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "d1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "d2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", 
      RowBox[{"d1", ".", "d2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", "d1", ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", "d2", ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", 
      RowBox[{"(", 
       RowBox[{"d1", ".", "d2"}], ")"}], ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", ".", "d1", ".", "s"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"s", ".", "d2", ".", "s"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", 
        SuperscriptBox["\[Alpha]", "2"]}]], 
      RowBox[{
       RowBox[{"(", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{"10", "\[Alpha]"}], "5"},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "10"}], "\[Alpha]"}], "5"},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "10"}], "\[Alpha]"}], 
           RowBox[{"-", "25"}]},
          {
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{"20", "\[Alpha]"}], 
           RowBox[{"-", "25"}]},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "50"}], "\[Alpha]"}], "175"}
         }], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"0", ",", "\[Alpha]"}], "]"}], ",", 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"1", ",", "\[Alpha]"}], "]"}], ",", 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"2", ",", "\[Alpha]"}], "]"}]}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]1", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"Tr", "[", "d1", "]"}], " ", 
         RowBox[{"Tr", "[", "d2", "]"}]}], "+", 
        RowBox[{"2", 
         RowBox[{"M", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", 
         RowBox[{"Tr", "[", 
          RowBox[{"d1", ".", "d2"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "3", "]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Tr", "[", "d2", "]"}], 
            RowBox[{"s", ".", "d1", ".", "s"}]}], "+", 
           RowBox[{
            RowBox[{"Tr", "[", "d1", "]"}], 
            RowBox[{"s", ".", "d2", ".", "s"}]}]}], ")"}]}], "+", 
        RowBox[{"4", 
         RowBox[{"M", "[", 
          RowBox[{"[", "4", "]"}], "]"}], " ", 
         RowBox[{"s", ".", 
          RowBox[{"(", 
           RowBox[{"d1", ".", "d2"}], ")"}], ".", "s"}]}], "+", 
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "5", "]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"s", ".", "d1", ".", "s"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"s", ".", "d2", ".", "s"}], ")"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"make", " ", "plot"}], " ", "*)"}], "\[IndentingNewLine]", " ", 
   RowBox[{"\[Gamma]1", " ", "=", " ", 
    RowBox[{"Limit", "[", 
     RowBox[{"\[Gamma]1", ",", " ", 
      RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vars1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Delta]", "\[Rule]", 
        RowBox[{"\[Omega]", " ", "t"}]}], ",", " ", 
       RowBox[{"\[Omega]", "\[Rule]", " ", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "24"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"p1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Gamma]1", "//.", "vars1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "24"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "16"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", "\"\<time (hrs)\>\"", "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "24"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<pure_rotation.eps\>\"", ",", "p1"}], "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5949088951621656`*^9, 3.5949089544151297`*^9}, 
   3.5949256697738743`*^9, {3.5949258682674417`*^9, 3.5949258712317047`*^9}, {
   3.5954396328663745`*^9, 3.5954396475232935`*^9}, {3.621883815684638*^9, 
   3.621883823212225*^9}, {3.621884333151512*^9, 3.621884350801221*^9}, 
   3.621884807353047*^9, {3.621884854671047*^9, 3.621884858565538*^9}, {
   3.621884962772283*^9, 3.6218850202949142`*^9}, {3.621928631764237*^9, 
   3.621928633167935*^9}, {3.6219301228421288`*^9, 3.621930124391789*^9}, {
   3.621954624870474*^9, 3.6219546964981623`*^9}, {3.627160271959309*^9, 
   3.627160360903894*^9}, {3.6271603940305557`*^9, 3.627160569298357*^9}, {
   3.627160646210684*^9, 3.627160831091823*^9}, {3.627160872509564*^9, 
   3.6271609521287937`*^9}, {3.627161050136352*^9, 3.6271611230513163`*^9}, {
   3.627161155276711*^9, 3.627161186785857*^9}, {3.627161226664592*^9, 
   3.627161227964903*^9}, {3.627161266365443*^9, 3.62716137819407*^9}, {
   3.627161423940915*^9, 3.6271614584862843`*^9}, {3.627161537861979*^9, 
   3.627161541185754*^9}, 3.627161595769135*^9, 3.627161669096019*^9, {
   3.6271648908403273`*^9, 3.6271648926465483`*^9}, {3.627168125724904*^9, 
   3.627168181986292*^9}, {3.627168387505259*^9, 3.627168388273487*^9}, {
   3.627173371353826*^9, 3.627173375519503*^9}, {3.6271734789612083`*^9, 
   3.6271734809669333`*^9}, {3.627173530646072*^9, 3.627173532413933*^9}, {
   3.627173592242717*^9, 3.6271736367007427`*^9}, {3.627173708844037*^9, 
   3.627173829321053*^9}, {3.627174130853154*^9, 3.6271741313114862`*^9}, {
   3.627175000135168*^9, 3.627175010934684*^9}, {3.627175071089273*^9, 
   3.627175094011895*^9}, {3.627201691071796*^9, 3.6272016946189137`*^9}, {
   3.6272017305502234`*^9, 3.627201761188139*^9}, {3.627201936070554*^9, 
   3.6272019767981358`*^9}, {3.627202059417923*^9, 3.6272021338653812`*^9}, {
   3.6272029496856747`*^9, 3.627203015277185*^9}, {3.627203067400844*^9, 
   3.627203068443386*^9}, {3.627205135392709*^9, 3.6272051562946253`*^9}, {
   3.6272051950774097`*^9, 3.6272052137205963`*^9}, {3.6272538433174763`*^9, 
   3.627253867394739*^9}, 3.6272542118866673`*^9, {3.627255477571471*^9, 
   3.627255484825159*^9}, {3.627255756802968*^9, 3.627255757544931*^9}, {
   3.627259252084972*^9, 3.627259279161521*^9}, {3.627260117467992*^9, 
   3.62726012057727*^9}, {3.636117340493084*^9, 3.636117349729755*^9}, {
   3.6361174105787077`*^9, 3.636117425214993*^9}, {3.636117806105733*^9, 
   3.636117807313746*^9}, {3.6361226773120613`*^9, 3.636122709507885*^9}, {
   3.636122768758401*^9, 3.6361227691248693`*^9}, {3.6362236826968412`*^9, 
   3.636223689906417*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.6362255219382343`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.6362255220907373`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Delta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.636225522805883*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.636225522910254*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.636225522913107*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.636225522916019*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.636225522918708*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Delta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.636225523545991*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
kBI1d4L4iVvl2L9/HPz//wf9P8Mc+pA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 16},
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox["\"time (hrs)\"", TraditionalForm], None}},
  GridLines->Automatic,
  Method->{},
  PlotRange->{{0, 24}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.627161195578463*^9, {3.627161246128927*^9, 3.627161325203349*^9}, {
   3.627161363079515*^9, 3.6271613786691217`*^9}, {3.627161585265954*^9, 
   3.6271616062368927`*^9}, 3.6271616704465837`*^9, 3.627168202923274*^9, 
   3.627168393996497*^9, 3.627168568395856*^9, 3.627169236249948*^9, {
   3.627173434061809*^9, 3.627173448397554*^9}, 3.6271735344174356`*^9, 
   3.627173639060884*^9, {3.627173763031581*^9, 3.6271738038287582`*^9}, 
   3.627173851053021*^9, 3.627174132433888*^9, 3.627174475391711*^9, {
   3.6271750124789543`*^9, 3.627175040195155*^9}, 3.627175096122882*^9, 
   3.6272016964332037`*^9, 3.627201750733444*^9, 3.62720206763059*^9, 
   3.627202144112123*^9, 3.627203016780221*^9, 3.62720307012649*^9, 
   3.6272051584025784`*^9, {3.627205205270041*^9, 3.6272052153890123`*^9}, 
   3.627253869552498*^9, 3.627254124989955*^9, 3.6272555196661167`*^9, 
   3.627255979990078*^9, 3.6272591831833973`*^9, 3.627259413318007*^9, 
   3.62726016657414*^9, 3.627260385457655*^9, 3.627262046168441*^9, 
   3.627262173452816*^9, 3.636117850420269*^9, {3.636122745557948*^9, 
   3.63612277014655*^9}, 3.636122865993745*^9, 3.636225524424559*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"pure", " ", "translation"}], " ", "-", " ", 
    RowBox[{"orbital", " ", "motion"}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"detector", " ", "locations"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x1", "=", 
     RowBox[{"{", 
      RowBox[{"R", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"R", " ", 
        RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ",", 
       RowBox[{"R", " ", 
        RowBox[{"Sin", "[", "\[Delta]", "]"}]}], ",", " ", "0"}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "unit", " ", "vectors", " ", "along", " ", "the", " ", "IFO", " ", 
     "arms"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u2", "=", 
     RowBox[{"{", " ", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2", "=", 
     RowBox[{"{", " ", 
      RowBox[{"0", ",", "0", ",", " ", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"detector", " ", "tensors"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d1", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "u1", ",", "u1"}], "]"}], " ", "-", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "v1", ",", "v1"}], "]"}]}], ")"}], "/", 
      "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "u2", ",", "u2"}], "]"}], " ", "-", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "v2", ",", "v2"}], "]"}]}], ")"}], "/", 
      "2"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"separation", " ", "vector"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x1", "-", "x2"}], ")"}], "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"x1", " ", "-", " ", "x2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
          RowBox[{"2", "Pi"}]}], ",", " ", 
         RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"d", " ", "=", 
    RowBox[{"FullSimplify", "[", " ", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{"x1", "-", "x2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
         RowBox[{"2", "Pi"}]}], ",", " ", 
        RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"overlap", " ", "expression"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "d1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "d2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", 
      RowBox[{"d1", ".", "d2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", "d1", ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", "d2", ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", 
      RowBox[{"(", 
       RowBox[{"d1", ".", "d2"}], ")"}], ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", ".", "d1", ".", "s"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"s", ".", "d2", ".", "s"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", 
        SuperscriptBox["\[Alpha]", "2"]}]], 
      RowBox[{
       RowBox[{"(", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{"10", "\[Alpha]"}], "5"},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "10"}], "\[Alpha]"}], "5"},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "10"}], "\[Alpha]"}], 
           RowBox[{"-", "25"}]},
          {
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{"20", "\[Alpha]"}], 
           RowBox[{"-", "25"}]},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "50"}], "\[Alpha]"}], "175"}
         }], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"0", ",", "\[Alpha]"}], "]"}], ",", 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"1", ",", "\[Alpha]"}], "]"}], ",", 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"2", ",", "\[Alpha]"}], "]"}]}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Gamma]2", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", "1", "]"}], "]"}], 
        RowBox[{"Tr", "[", "d1", "]"}], " ", 
        RowBox[{"Tr", "[", "d2", "]"}]}], "+", 
       RowBox[{"2", 
        RowBox[{"M", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", 
        RowBox[{"Tr", "[", 
         RowBox[{"d1", ".", "d2"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", "3", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", "d2", "]"}], 
           RowBox[{"s", ".", "d1", ".", "s"}]}], "+", 
          RowBox[{
           RowBox[{"Tr", "[", "d1", "]"}], 
           RowBox[{"s", ".", "d2", ".", "s"}]}]}], ")"}]}], "+", 
       RowBox[{"4", 
        RowBox[{"M", "[", 
         RowBox[{"[", "4", "]"}], "]"}], " ", 
        RowBox[{"s", ".", 
         RowBox[{"(", 
          RowBox[{"d1", ".", "d2"}], ")"}], ".", "s"}]}], "+", 
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", "5", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"s", ".", "d1", ".", "s"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"s", ".", "d2", ".", "s"}], ")"}]}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"make", " ", "plot"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vars2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"R", "\[Rule]", " ", 
        RowBox[{"1.5", " ", 
         RowBox[{"10", "^", "11"}]}]}], ",", 
       RowBox[{"c", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "8"}]}]}], ",", " ", 
       RowBox[{"f", "\[Rule]", "100"}], ",", " ", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"2", "\[Pi]", " ", "f", " ", 
         RowBox[{"d", "/", "c"}]}]}], ",", " ", 
       RowBox[{"\[Delta]", "\[Rule]", 
        RowBox[{"\[Omega]", " ", "t"}]}], ",", " ", 
       RowBox[{"\[Omega]", "\[Rule]", " ", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", 
          RowBox[{"(", 
           RowBox[{"24", " ", "365"}], ")"}]}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"p2", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Gamma]2", "//.", "vars2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "16"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", "\"\<time (hr)\>\"", "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.2"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<pure_orbit.eps\>\"", ",", "p2"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.627168226332761*^9, 3.6271683722031527`*^9}, {
   3.627168431380889*^9, 3.627168432131235*^9}, {3.627168464098896*^9, 
   3.6271684798271503`*^9}, {3.627168534293936*^9, 3.627168555847649*^9}, {
   3.627172073878015*^9, 3.627172089085236*^9}, {3.627172194906392*^9, 
   3.627172201788678*^9}, 3.627172268390448*^9, {3.627173128646022*^9, 
   3.6271731352232513`*^9}, {3.627173170771844*^9, 3.627173277628613*^9}, {
   3.627174384180314*^9, 3.6271744331017113`*^9}, {3.627174687740897*^9, 
   3.6271748368365707`*^9}, 3.627174872550159*^9, {3.627201848224317*^9, 
   3.627201855122045*^9}, {3.627202184344738*^9, 3.627202185854748*^9}, {
   3.6272022197263107`*^9, 3.627202482676856*^9}, {3.627202521004283*^9, 
   3.627202526275895*^9}, {3.627202772345681*^9, 3.6272027871085033`*^9}, {
   3.627202842733972*^9, 3.627202864628441*^9}, {3.627202898177503*^9, 
   3.627202909760269*^9}, {3.627205245752481*^9, 3.6272052577076283`*^9}, {
   3.627253913113*^9, 3.627253919311586*^9}, {3.6272539663768473`*^9, 
   3.627253968424253*^9}, {3.627254104192244*^9, 3.6272541054211063`*^9}, {
   3.627255464491393*^9, 3.627255466996036*^9}, {3.627257442950499*^9, 
   3.6272574653118267`*^9}, {3.627258720703117*^9, 3.6272587284127073`*^9}, 
   3.6272587587224493`*^9, {3.627259285669158*^9, 3.627259289998013*^9}, {
   3.627259361078857*^9, 3.627259365759*^9}, {3.627260127236712*^9, 
   3.6272601292768497`*^9}, 3.627261970673053*^9, {3.62726202784315*^9, 
   3.6272620315235033`*^9}, {3.62726214040853*^9, 3.627262143896137*^9}, {
   3.636117464482473*^9, 3.6361174851200247`*^9}, {3.636117554922674*^9, 
   3.6361175577852097`*^9}, {3.6361177980943127`*^9, 3.636117799515916*^9}, 
   3.636122723046085*^9, {3.636122781890896*^9, 3.6361227822001133`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "R", " ", 
  RowBox[{"Sin", "[", 
   FractionBox["\[Delta]", "2"], "]"}]}]], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.636225535668954*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.6362255357233562`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.636225535725123*^9}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.6362255357270412`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.636225535792572*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.636225535819606*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.6362255358215857`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox[
   RowBox[{"Cos", "[", 
    FractionBox["\[Delta]", "2"], "]"}], "4"]}]], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.63622553589786*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["\[Alpha]", "2"]}]], 
  RowBox[{"5", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ")"}], "2"], " ", 
      RowBox[{"SphericalBesselJ", "[", 
       RowBox[{"0", ",", "\[Alpha]"}], "]"}]}], "-", 
     RowBox[{"2", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"15", "-", 
        RowBox[{"12", " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], "+", 
        RowBox[{"5", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Delta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"SphericalBesselJ", "[", 
       RowBox[{"1", ",", "\[Alpha]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"57", "+", 
        RowBox[{"60", " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], "+", 
        RowBox[{"35", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Delta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"SphericalBesselJ", "[", 
       RowBox[{"2", ",", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.636225536527854*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
RN/zVl2VBn+fD/ZayRHQ+TWupGo1GtTJyB7XFCGgjyLM48r/0WAk16ej7Tse
yR7oWXmoRYO7Y3KTu+vwKAqeNcgdp0HhG8u1Ml886rLNDS/VoYH0NV7dci48
ksRFquzUo8F6vvPno3vCEO6i/fcCfRocnpdEIBqK0K1jj0WMaODeatpVSsEh
kefSftmnaPDx0HJjX04w8nnHJrfFhAZjkqPvfaWDUOM4ZTr1DA32qyi/VMwM
QJvnO2+zn6XBpWP/yjkn/NCzXVd3rFpj/FxceK6h4o3YNPCfIu1ocKCk3fWf
hieyNrXOmXOgwcCBR5melm5oJUZiC9OVBrEy6rOFL2yRSfZap7cHDSYak7tf
61uiO/emL0170WDh/uui8khjpD94/9+IPw2mojgcnOWVUZbikV/vCFh+O7Lp
TW1mMKW3/dmJSBocWae5H3KwBlX7laDX0Rj/bIsq5Bf2MHKplVqfQAPNy3ue
7RXwgANFd+8ePk8Dh5HbSumbveBcdYpb1QXsvB5v9x8/vWHPpMnXilQa+Eks
yzIJ/pDx9vhz28s0UJzLsH2gGAjzD5XTNmXSYJ+8tWExCgKnq9KuTVdp0NV8
c6PgEA7ehguqB+fQIOyhcnxpVAgoOmxskb5OA7kd7/R/54XCdZ05Uv8NGuRd
EP/BlxoGa7Kklxdu0eBH0LttFnvx4MM7dO1IMQ1IefDaioCH3h9v/ah3sP7h
Sfiy/wEeND7V6RSUYfEOmv642o6Hkpf3RE9XYPzxT6e7fcADT8mNmdX7NDBt
cXW49QIPoZfS3j55hOltnnHEKRsPXwJiCl2f0IBLTXicYob5kXkAXugZph9O
Y0OlH2HwSM3x1JtqGiy+zHs+LRwGWyVMdkXUYWvRVzvl+UIhbv3YonwjDRSO
HPKMHMMBmaLUO/KSBkv0RGZacjCYfJCquPwKW0fLqJtwBEHtM4H4Y600aBD5
u5PsFgCS+esW39toQDdrb71X6AczbsT1s500sOJ9PMyq8wIbw8Fh9g80eH5Z
qHrhlge0HHhbVddDg5szh/B+/S6QtVDhJDZIg+SEpILym9ZwKMO/cWqcBuHf
2ZpypMi6BWEOV3OmMHy+OGyPklZDGzbGPvokGtTcIUYK2hmgjzJK2IRAg2cD
ve3HwBppcUux7Fk00BAaJziQ7VHZN/62zd8xv3jm8azDywURGmZDQn7RIPH3
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
J7xZaNdxKv/EiWzpO3Soqb/WJptCQufcpptyfUGQdlAoY+I0CSNVe7Lx9zQI
1gxzf3iWhK1rND5LNAeC1Yc+hdPpJCjpFt42zA4A5QyzEY8MEjyjJO0Dcv1g
3rqsXDOLhO2Zxmv/9npDXXXkxpZ8EmbEtNgR/a6genyljVAZSd3N1ybY9+3w
b3OsWP91EuhxnO1dXQbwDv/SVXaThG/n9iePXpOG8+61vtZ3qPyrJBihN4zQ
PlF5Nek6ar5PYle6Olsgm8ak8dF7JHQrTzXrbrJFC9pOB088ofDoZnxf3cQZ
DX58uNkVkZAU5XT3lr8bupep8m9NEwnTg1L2oTRPlGF7+tnUcxLMXDVL31B+
bP+/76eeN5MQuvLXRCzuh3bVeuzJfE3CgwMvD1bfC0Dq7IYV9HYS5NoDrgy8
D0R8qzXfGXSS0MiGU0e/0dD7t+lXBbpJOHNI2ZCvNwg9ODkb1N1L8Vv7V9h/
JXSUaeqvVTxAQhaLwFycqXvz/SVxYIiEz99h1ehnBrIr1auzGKbwe9qyZGQP
E2l4ZR+V/EzCNq79i8o8JuJf/s9s5AvFR8VU2f5GJhp+xhCsGSPh1sBZW+1m
JnoU1f4qcYIE4ZSrTiUVlD/SNUx35JFgbbovIYrDRBEjl11USBK+hOlLLRdi
ot05gnKTkyRc8pooEExmIM3d+z42TFF81b61RGuYjgQX9ZScnyVBIa8M4mXp
6NNd0+CA3yQoVz+uNTIKQk+Ci9fr/yXBR9Y1vNaQhnKUlk4vLJDQ0qHzO1E2
EP0PYhmo5g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 16},
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox["\"time (hr)\"", TraditionalForm], None}},
  GridLines->Automatic,
  ImageSize->{427.31640625, Automatic},
  Method->{},
  PlotRange->{{0, 1}, {-0.2, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.627168400813072*^9, 3.627168436667692*^9, 3.627168481215622*^9, 
   3.6271685793147717`*^9, 3.627169096569355*^9, 3.627169238199175*^9, 
   3.6271720919412127`*^9, 3.627172203926732*^9, 3.627172271082491*^9, 
   3.6271731431671267`*^9, {3.62717326014168*^9, 3.627173280276205*^9}, 
   3.6271741383177023`*^9, {3.627174390779001*^9, 3.627174413516848*^9}, 
   3.627174478140542*^9, 3.6271747255944233`*^9, 3.6271747680809517`*^9, {
   3.627174810031722*^9, 3.627174839415921*^9}, 3.627174875580935*^9, 
   3.627175042215928*^9, 3.627201857608039*^9, 3.627202187888974*^9, 
   3.62720234248625*^9, 3.627202409956003*^9, 3.627202460959671*^9, 
   3.627202527322576*^9, 3.627202866069713*^9, 3.627202912027574*^9, 
   3.627205259393993*^9, 3.6272541276334743`*^9, 3.627255521282896*^9, 
   3.627255981389233*^9, {3.627257451025597*^9, 3.627257467271749*^9}, 
   3.6272587299582167`*^9, 3.627258760277376*^9, 3.627259184860183*^9, 
   3.627259414355659*^9, 3.627260167787936*^9, 3.627260386528681*^9, 
   3.6272620480183268`*^9, 3.627262174851767*^9, 3.636117859245153*^9, 
   3.6361227836530533`*^9, 3.636122868743252*^9, 3.636225540044364*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "rotation", " ", "of", " ", "IFOs", " ", "on", " ", "surface", " ", "of", 
     " ", "earth"}], ";", " ", 
    RowBox[{"no", " ", "orbital", " ", "motion"}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"detector", " ", "locations"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x1", "=", 
     RowBox[{"{", 
      RowBox[{"RE", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RE", " ", 
        RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ",", 
       RowBox[{"RE", " ", 
        RowBox[{"Sin", "[", "\[Delta]", "]"}]}], ",", " ", "0"}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "unit", " ", "vectors", " ", "along", " ", "the", " ", "IFO", " ", 
     "arms"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u2", "=", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Delta]", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[Delta]", "]"}], ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2", "=", 
     RowBox[{"{", " ", 
      RowBox[{"0", ",", "0", ",", " ", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"detector", " ", "tensors"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d1", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "u1", ",", "u1"}], "]"}], " ", "-", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "v1", ",", "v1"}], "]"}]}], ")"}], "/", 
      "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "u2", ",", "u2"}], "]"}], " ", "-", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "v2", ",", "v2"}], "]"}]}], ")"}], "/", 
      "2"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"separation", " ", "vector"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x1", "-", "x2"}], ")"}], "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"x1", " ", "-", " ", "x2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
          RowBox[{"2", "Pi"}]}], ",", " ", 
         RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"d", " ", "=", 
    RowBox[{"FullSimplify", "[", " ", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{"x1", "-", "x2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
         RowBox[{"2", "Pi"}]}], ",", " ", 
        RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"overlap", " ", "expression"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "d1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "d2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", 
      RowBox[{"d1", ".", "d2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", "d1", ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", "d2", ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", 
      RowBox[{"(", 
       RowBox[{"d1", ".", "d2"}], ")"}], ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", ".", "d1", ".", "s"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"s", ".", "d2", ".", "s"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", 
        SuperscriptBox["\[Alpha]", "2"]}]], 
      RowBox[{
       RowBox[{"(", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{"10", "\[Alpha]"}], "5"},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "10"}], "\[Alpha]"}], "5"},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "10"}], "\[Alpha]"}], 
           RowBox[{"-", "25"}]},
          {
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{"20", "\[Alpha]"}], 
           RowBox[{"-", "25"}]},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "50"}], "\[Alpha]"}], "175"}
         }], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"0", ",", "\[Alpha]"}], "]"}], ",", 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"1", ",", "\[Alpha]"}], "]"}], ",", 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"2", ",", "\[Alpha]"}], "]"}]}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"\[Gamma]3", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", "1", "]"}], "]"}], 
        RowBox[{"Tr", "[", "d1", "]"}], " ", 
        RowBox[{"Tr", "[", "d2", "]"}]}], "+", 
       RowBox[{"2", 
        RowBox[{"M", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", 
        RowBox[{"Tr", "[", 
         RowBox[{"d1", ".", "d2"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", "3", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", "d2", "]"}], 
           RowBox[{"s", ".", "d1", ".", "s"}]}], "+", 
          RowBox[{
           RowBox[{"Tr", "[", "d1", "]"}], 
           RowBox[{"s", ".", "d2", ".", "s"}]}]}], ")"}]}], "+", 
       RowBox[{"4", 
        RowBox[{"M", "[", 
         RowBox[{"[", "4", "]"}], "]"}], " ", 
        RowBox[{"s", ".", 
         RowBox[{"(", 
          RowBox[{"d1", ".", "d2"}], ")"}], ".", "s"}]}], "+", 
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", "5", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"s", ".", "d1", ".", "s"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"s", ".", "d2", ".", "s"}], ")"}]}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"make", " ", "plot"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vars3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RE", "\[Rule]", " ", 
        RowBox[{"6371", " ", 
         RowBox[{"10", "^", "3"}]}]}], ",", 
       RowBox[{"c", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "8"}]}]}], ",", " ", 
       RowBox[{"f", "\[Rule]", "100"}], ",", " ", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"2", "\[Pi]", " ", "f", " ", 
         RowBox[{"d", "/", "c"}]}]}], " ", ",", 
       RowBox[{"\[Delta]", "\[Rule]", 
        RowBox[{"\[Omega]", " ", "t"}]}], ",", " ", 
       RowBox[{"\[Omega]", "\[Rule]", " ", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "24"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"p3", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Gamma]3", "//.", "vars3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "24"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "16"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", "\"\<time (hr)\>\"", "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "24"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.2"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<earth_rotation.eps\>\"", ",", "p3"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.627172358187944*^9, 3.6271723873798018`*^9}, {
   3.627172451758807*^9, 3.627172561838744*^9}, {3.627172594625209*^9, 
   3.627172680559251*^9}, {3.627173888371934*^9, 3.627173925997655*^9}, {
   3.627173997916335*^9, 3.6271740251841*^9}, {3.627174073090766*^9, 
   3.6271740802238083`*^9}, {3.627174157165021*^9, 3.6271741635252857`*^9}, {
   3.62717420481572*^9, 3.627174227568845*^9}, {3.627174297922604*^9, 
   3.627174338695942*^9}, {3.627174925840678*^9, 3.627174956388616*^9}, {
   3.6272539340220003`*^9, 3.6272539442016773`*^9}, {3.62725398726411*^9, 
   3.6272540179503736`*^9}, {3.627254058913088*^9, 3.627254081807035*^9}, {
   3.6272541970384903`*^9, 3.627254201669862*^9}, {3.627255379315076*^9, 
   3.627255381724147*^9}, {3.6272557792946987`*^9, 3.627255838936245*^9}, 
   3.627257478205512*^9, 3.627258313678896*^9, {3.627259299878717*^9, 
   3.627259313386565*^9}, 3.627260094932109*^9, 3.627260138684732*^9, {
   3.636117494366267*^9, 3.636117516310751*^9}, {3.636117578586112*^9, 
   3.6361175848489733`*^9}, {3.636117771789687*^9, 3.63611777928915*^9}, 
   3.636122729776284*^9, {3.6361227985785093`*^9, 3.6361227997530403`*^9}, {
   3.636223514456666*^9, 3.636223591029985*^9}, {3.6362242442696657`*^9, 
   3.636224245282798*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "RE", " ", 
  RowBox[{"Sin", "[", 
   FractionBox["\[Delta]", "2"], "]"}]}]], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.636225541985858*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.636225541988562*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.636225541990459*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Delta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.636225541992152*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.6362255423996*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.636225542401703*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox[
   RowBox[{"Cos", "[", 
    FractionBox["\[Delta]", "2"], "]"}], "2"], " ", 
  RowBox[{"Cos", "[", "\[Delta]", "]"}]}]], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.63622554240353*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox[
   RowBox[{"Cos", "[", 
    FractionBox["\[Delta]", "2"], "]"}], "4"]}]], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.636225542405573*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["\[Alpha]", "2"]}]], 
  RowBox[{"5", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ")"}], "2"], " ", 
      RowBox[{"SphericalBesselJ", "[", 
       RowBox[{"0", ",", "\[Alpha]"}], "]"}]}], "+", 
     RowBox[{"2", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "23"}], "+", 
        RowBox[{"12", " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Delta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"SphericalBesselJ", "[", 
       RowBox[{"1", ",", "\[Alpha]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"89", "+", 
        RowBox[{"60", " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Delta]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"SphericalBesselJ", "[", 
       RowBox[{"2", ",", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.636225543110627*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwc2Xk8VN8bB3Bkb7FvQ3YzYydLm5xHKomELCVJipSIQiqyFLJG1ixZs28z
ZowkJyrRRoVEyVaphIRQ6ne/P//wft17z33uOefe8zkvCm5nbN052NjYDLjZ
2P77vWjhk2t9Jt/Y7+c/4mcaRR2nULvIl9HHPSZcjoSfT42fSiAnotia39rO
K9OoUmww/21OOnLiiqoRWJ5GM/Wm8afJt1DwebEXfvPTiKTad/ffm0L00pex
HDE9jbYFxep25pQgrzWG2HRiGrk+Ni69cbQCzX5VecT4MI0ixH/KOJNrUFYA
o6evdxq9ou/vvDFfh94l5fVUPJlGxwc0r/56Q0ferRJPdFum0Tw7L3JuYqBj
jwv6T9cR9aqOLt3PaUAW9XMmhwumkYRNM0MltBG9v9Djzpk8jcqC0s/EHm1C
L/i/tB4LnUZPH+/5uJ/cgu6FNlTbHJhGNeeFrZ0576N/GTeejW2fRufjQqsT
5+8jfa4wEwONacRbf9Dz55s2VHVQI0729xTqbm9/pNL5APEPSvU1DU+hmwN6
SgeaHqK9h3+4yT2aQmoc64aac9qRncSaYxaxU2hW7NLW6YTH6LvydnVJryl0
V3UiUyG0A61pKx9i7ZlCljZt+6OOPkEZ+dz9l7in0Jn8wM595BfI8kraeR/f
72gTY4wcIdGF9BMfGqvt/o7YjlO3O3F2o1zuP6qvZb+jzvNpefHz3ahP7+bB
3x2TyCnvjNOPN6/Q2dqyZGGhSRQ8pdTdlNOHWGWfm9b6f0WuQQN/94u9QdxL
WkbXjL6iHRzJmt8T3qBERQcBA86vaK3431i50H50bLbBf3PyF3RrW//Oq0cH
0KmJL5MXCydQa3z83b3kIXRSIubx+ZJPqOXr22ery4dQ6lhtwKzLJ9S8mzLU
qf4BXT9mHvNB/BM6xHGUrUhyGFmHZwRpRn5E9i2/FeVkR1Cv3sw6N+dxtMdQ
11NCdQxd2RxaGvV7BOmRc2Z50Ge0glJ+KLsMoA292397hH1Gqal+NZcfv0U6
V7+sam/9jPKNjzaE6r5FWqOGYld3TKBna/RFK3j6EfXWy41se76gcsnHD3/d
60Uy4jwhi3bfUA6HDEeO80tEelQd6Zj+DaWF31uc6+1GUv52iQ1vvqGUAafQ
cutuJP6qIM/faRJVlmiPp6W+QIKJRm0zR76jd4nJIj23niAu7rM8X04R8zZ+
F9cW6wdowjxU4GfpNMpP1X8QebUNPUmIl1gZn0b+Yv1uq5pb0ePY1ynXtGeQ
/eMWMZb+fRQnPFWUUz6DBK9/FL6T3YSCGXOlCh0z6OaNyDmNzXeQj8PvypJP
Mygi5BH3xfcsZJ3Fy6hT+oHkmyy8n2xhIlFFpYcPc3+gwOCkWmReh7geqnaY
N/9Am2IGP/8xqkEL7jrPXgz8QE82nsirnK9E/eXbevolZpHdgTr+5uRS1Gmx
o/+w4Sw60l1sqRpwGzV93/Nu1G4WddXHvh/yKEK5ugfGJ5NnUcpy24N9X2+h
xNcuE351s2hp5Nb5c0rZKCzAfXLhxSyK6R73VriQgdzunJ1jW/MTrU28YzF7
IQmRTRI4xaJ+onahjujkYB8kMZbCm1X8E72zD/FVOLkX8UZmrZF78BNpN/HF
Vb48jL92lIqqss0hBbU9LkungvHgqRrJGtk5NINyt2TIX8HP1jBl9LbNIQN8
PEamNxrXWrcpb7s4h/K7dnz4vjcJ5892UNsy55CUiE2Xj+MNfCO1S8OMNYeo
aqu5vHel4iuGfTrPeucQWXrZUEE6Hfv3v9O3mZtDubNyrPbeDOx+cWxTn/A8
yjOTPZEdeBM7yHw1OqQ7j3pSxKo+rGThTa6/drj7zCPTetvuh/dzsSrH391f
4+eR/Nb4rNk/tzCpmHPvmcp5pD/UNWAnmI9X71ptM9c5j9zzyzSk0/Pxn89C
9hcm5tGLvb4XfgoU4O8xkgf/ci+gR19yV3NfLsBD6nKHr6gsoIStl7cEDxfg
rucqR3l3LCD0T/JY2MZCfP+MhnuC2wLirFoZ3nalENOE9E4Khy+gmvFF7pEH
hbiwfrN3Rt4Cmiurl8hYKsQp9uAn07KAJF22GScqF+Grv3YFFLwj7tcRHjW/
owgH3Nx7gfx7AU2KVvX+cSrCHlvtQiqlfiFdrqDRHo8ifOC9U7jOpl9o1Ous
Zq1nETYPPRrJdPiFVvGpLd1zLcIbrrfuKvD/hT7ypeQV7SvCMnkKvAk3fiHl
31GjYQZFmLs2vDOo7heSEDwsFC1chGdaRmKPv/iFxlOyhCY+FeKBFyaW1pO/
UPjpcsc+eiF+MFSw1oh/EV3AUR+uBhbiqin2Lgp1EflXn1KhbCjE6X+PJons
WkRNaqdkf3wswGHr2mz+HVtEIl9EdCVuFOBTsooi38IX0SZ7Pq0XhgXYTiui
py9vEa3NT91t0ZOPtxmPprXdW0Tnuo0EHp7Kx2Sr7Y41g4vIuZrW8W4uDwu6
FEpmLS0ivHHndzaePDwe4pbtZ7CE3FrlWry4cvGLhDbnw/uX0PKZ8uyE2Wzc
mKsoa+63hOrfX95k0JOF4+6N5stXL6Gbhr7vugIz8YYVt5Iu5WWk9beyz25n
CpZZ++DE3e3L6HEcn8bD0WTMvV5JtdR1GUmLm03qBCXht0ZjlZdzllEHW5RC
sFQcDgs+RtMU/Y0aan/fGSkMwafiH5yV2vAbRWy0FUrbfR7b5Sjpc1n/RsuL
+UcWB30xpXms4V3cbzT81fmJeaoVfvH7WHPcqj8o676nXsWrQCRz6fjjL7N/
kMjVlK2WKAVxxz281iu4gjw8+EiWU6loJkt5T6vWCnKKLa66lp2OHjSNP8s8
tYK4Pr733D19E51aPv7KbHQFUd+oWgptzkesC+7vb7/8i9rDvv0StipBJcZe
b0izf1FETMP6CuFSlL7K7+V14X/I9Tyb/JbXpSgwIfjRhf3/0PpG+elss3Lk
YRuBp879Q+VW1yNkfpcjB4lrd46l/kM2pRHRP8srkGFBSvXe3n9o4uWOJsGl
SkT2uFnaNv8PLSRuUxS8WYXi0rq6pVezgTp5TWC/XjW65NT7JEmdDSLX9ZF3
HqxBP436zZ5uZYPHks7J1WM1yEtu8CGXJRskVE5xn/CsRYfGh1sunmYDjegI
nQ06dehV+9hWZjAbUIp3MO6erEN7yj81TsezwYeguhGj/DrUFvfFQC2XDVpv
TplUvq5DW3wm6cer2SDlmJLwyioaoltPa+fdY4Oo4pumqro0pKY3W/X2ORuo
aHdfohyioUKxeVXRITYouXJKdCachkiLv0qspthgazOndPBtGroxsKwU85cN
LGa/Wj96REP891byH6xjB0tbhlr7KA1F5LHJ/pVlB0dSW9eFPzS0HL4qe5M2
Oxx7WCj1TpiOzh7nljyH2IEj/2DKFxU6+rqLL616HztcVYgLyjOgIzfVNcIT
R9hhcGMi47cJHQ2sFriu6MsOXrNuI3/20JHtlNCaw2HssNSduKvQmo6edIvG
ZCSxg6/ghzffbOloe70E96t8diiyFdIfsKGjpjTSlTU0dnD/51bks5eONgSt
ZzNrZYcMzCNeuZOOKpzkQ8JfskPhxWjFG1voSHGb0vLdEXb4bsTJSdGgoyw5
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
A17fUbXauzKJWEZNcysrDLD//9/P+D9Jtwvg
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 16},
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox["\"time (hr)\"", TraditionalForm], None}},
  GridLines->Automatic,
  Method->{},
  PlotRange->{{0, 24}, {-0.2, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.627174166287137*^9, {3.627174211374092*^9, 3.627174230615858*^9}, {
   3.62717430619767*^9, 3.6271743411528063`*^9}, 3.6271744837966633`*^9, {
   3.627174935510269*^9, 3.627174959001339*^9}, 3.6271750477628736`*^9, 
   3.627254018666449*^9, 3.6272540831651783`*^9, 3.627254135318623*^9, 
   3.6272553833128433`*^9, 3.627255523852015*^9, 3.627255843695407*^9, 
   3.627255984268407*^9, 3.627257479827587*^9, 3.627258314839677*^9, 
   3.627259059295361*^9, 3.627259187829528*^9, 3.627259417320695*^9, 
   3.6272601708055058`*^9, 3.627260389375668*^9, 3.627262051042362*^9, 
   3.627262177489553*^9, 3.636117862364912*^9, 3.636122800835342*^9, 
   3.63612287175809*^9, 3.636223605017868*^9, 3.636224246808784*^9, 
   3.6362255451386642`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "rotation", " ", "of", " ", "IFOs", " ", "on", " ", "surface", " ", "of", 
    " ", "earth", " ", "plus", " ", "orbital", " ", "motion"}], " ", "*)"}], 
  " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "position", " ", "vector", " ", "of", " ", "center", " ", "of", " ", 
    "earth"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"x01", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"R", " ", ",", " ", "0", ",", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x02", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"R", " ", 
        RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ",", " ", 
       RowBox[{"R", " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}], ",", " ", "0"}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"detector", " ", "locations"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x1", "=", 
     RowBox[{"x01", " ", "+", 
      RowBox[{"{", 
       RowBox[{"RE", ",", "0", ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x2", "=", 
     RowBox[{"x02", "+", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RE", " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], ",", 
        RowBox[{"RE", " ", 
         RowBox[{"Sin", "[", "\[Delta]", "]"}]}], ",", " ", "0"}], "}"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "unit", " ", "vectors", " ", "along", " ", "the", " ", "IFO", " ", 
     "arms"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u2", "=", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Delta]", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[Delta]", "]"}], ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v2", "=", 
     RowBox[{"{", " ", 
      RowBox[{"0", ",", "0", ",", " ", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"detector", " ", "tensors"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d1", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "u1", ",", "u1"}], "]"}], " ", "-", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "v1", ",", "v1"}], "]"}]}], ")"}], "/", 
      "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "u2", ",", "u2"}], "]"}], " ", "-", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", "v2", ",", "v2"}], "]"}]}], ")"}], "/", 
      "2"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"separation", " ", "vector"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x1", "-", "x2"}], ")"}], "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"x1", " ", "-", " ", "x2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
          RowBox[{"2", "Pi"}]}], ",", " ", 
         RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
          RowBox[{"2", "Pi"}]}], ",", " ", 
         RowBox[{"R", ">", "0"}], ",", " ", 
         RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"d", " ", "=", 
    RowBox[{"FullSimplify", "[", " ", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{"x1", "-", "x2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
         RowBox[{"2", "Pi"}]}], ",", " ", 
        RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
         RowBox[{"2", "Pi"}]}], ",", " ", 
        RowBox[{"R", ">", "0"}], ",", " ", 
        RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"overlap", " ", "expression"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "d1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", "d2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Tr", "[", 
      RowBox[{"d1", ".", "d2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", "d1", ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", "d2", ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"s", ".", 
      RowBox[{"(", 
       RowBox[{"d1", ".", "d2"}], ")"}], ".", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", ".", "d1", ".", "s"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"s", ".", "d2", ".", "s"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"0", "\[LessEqual]", "\[Delta]", "\[LessEqual]", " ", 
        RowBox[{"2", "Pi"}]}], ",", " ", 
       RowBox[{"R", ">", "0"}], ",", " ", 
       RowBox[{"RE", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", 
        SuperscriptBox["\[Alpha]", "2"]}]], 
      RowBox[{
       RowBox[{"(", GridBox[{
          {
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{"10", "\[Alpha]"}], "5"},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "10"}], "\[Alpha]"}], "5"},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "10"}], "\[Alpha]"}], 
           RowBox[{"-", "25"}]},
          {
           RowBox[{
            RowBox[{"-", "5"}], 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{"20", "\[Alpha]"}], 
           RowBox[{"-", "25"}]},
          {
           RowBox[{"5", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           RowBox[{
            RowBox[{"-", "50"}], "\[Alpha]"}], "175"}
         }], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"0", ",", "\[Alpha]"}], "]"}], ",", 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"1", ",", "\[Alpha]"}], "]"}], ",", 
         RowBox[{"SphericalBesselJ", "[", 
          RowBox[{"2", ",", "\[Alpha]"}], "]"}]}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]4", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{"Tr", "[", "d1", "]"}], " ", 
         RowBox[{"Tr", "[", "d2", "]"}]}], "+", 
        RowBox[{"2", 
         RowBox[{"M", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", 
         RowBox[{"Tr", "[", 
          RowBox[{"d1", ".", "d2"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "3", "]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Tr", "[", "d2", "]"}], 
            RowBox[{"s", ".", "d1", ".", "s"}]}], "+", 
           RowBox[{
            RowBox[{"Tr", "[", "d1", "]"}], 
            RowBox[{"s", ".", "d2", ".", "s"}]}]}], ")"}]}], "+", 
        RowBox[{"4", 
         RowBox[{"M", "[", 
          RowBox[{"[", "4", "]"}], "]"}], " ", 
         RowBox[{"s", ".", 
          RowBox[{"(", 
           RowBox[{"d1", ".", "d2"}], ")"}], ".", "s"}]}], "+", 
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "5", "]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"s", ".", "d1", ".", "s"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"s", ".", "d2", ".", "s"}], ")"}]}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"make", " ", "plot"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vars4", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"R", "\[Rule]", " ", 
        RowBox[{"1.5", " ", 
         RowBox[{"10", "^", "11"}]}]}], ",", 
       RowBox[{"RE", "\[Rule]", " ", 
        RowBox[{"6371", " ", 
         RowBox[{"10", "^", "3"}]}]}], ",", 
       RowBox[{"c", "\[Rule]", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "8"}]}]}], ",", " ", 
       RowBox[{"f", "\[Rule]", "100"}], ",", " ", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"2", "\[Pi]", " ", "f", " ", 
         RowBox[{"d", "/", "c"}]}]}], " ", ",", 
       RowBox[{"\[Beta]", "\[Rule]", 
        RowBox[{"\[Omega]", " ", "t"}]}], ",", " ", 
       RowBox[{"\[Omega]", "\[Rule]", " ", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", 
          RowBox[{"(", 
           RowBox[{"24", " ", "365"}], ")"}]}]}]}], ",", " ", 
       RowBox[{"\[Delta]", "\[Rule]", 
        RowBox[{"\[Omega]E", " ", "t"}]}], ",", " ", 
       RowBox[{"\[Omega]E", "\[Rule]", " ", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "24"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"p4", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Gamma]4", "//.", "vars4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", " ", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "16"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", "\"\<time (hr)\>\"", "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.2"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<rotation_and_orbit.eps\>\"", ",", "p4"}], "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.627254245284316*^9, 3.627254445064891*^9}, {
   3.6272545171565437`*^9, 3.6272546519835176`*^9}, {3.627254731728425*^9, 
   3.6272547688196087`*^9}, {3.62725479959804*^9, 3.627254834493167*^9}, {
   3.627254923606516*^9, 3.62725493517879*^9}, {3.627255001005319*^9, 
   3.627255001942956*^9}, {3.627255055087974*^9, 3.627255095825099*^9}, {
   3.627255138232856*^9, 3.6272551443016853`*^9}, {3.62725553850246*^9, 
   3.627255567066571*^9}, {3.627255864487462*^9, 3.6272559183827763`*^9}, {
   3.6272565868800783`*^9, 3.627256606841489*^9}, {3.627256638240774*^9, 
   3.627256643040448*^9}, {3.627256800915564*^9, 3.627256809841078*^9}, {
   3.6272569673053827`*^9, 3.627256970445408*^9}, {3.6272570201283693`*^9, 
   3.62725703631034*^9}, {3.627257087051008*^9, 3.6272571142403917`*^9}, {
   3.6272572627183*^9, 3.627257290072341*^9}, {3.627257325767445*^9, 
   3.627257326487321*^9}, 3.627257591988044*^9, {3.627257636033392*^9, 
   3.627257648864009*^9}, {3.627257850122707*^9, 3.627257866298156*^9}, {
   3.6272579104115334`*^9, 3.627257949688006*^9}, {3.627258007271903*^9, 
   3.627258022413693*^9}, {3.627258057823798*^9, 3.627258065605404*^9}, {
   3.627258143163838*^9, 3.6272581478803797`*^9}, {3.627258301065061*^9, 
   3.627258301541731*^9}, {3.627258532054822*^9, 3.627258535204687*^9}, {
   3.6272588019483433`*^9, 3.627258803402975*^9}, {3.627258901010716*^9, 
   3.627258943217609*^9}, {3.627259034614661*^9, 3.627259043532789*^9}, {
   3.6272591562406282`*^9, 3.627259159294551*^9}, {3.6272593213189573`*^9, 
   3.627259328552175*^9}, {3.62725947271064*^9, 3.6272594750691423`*^9}, {
   3.6272595260526953`*^9, 3.627259539754395*^9}, {3.627259583539692*^9, 
   3.627259632977685*^9}, {3.6272596824405117`*^9, 3.627259696887178*^9}, {
   3.6272597760333223`*^9, 3.627259826202649*^9}, {3.6272598709335327`*^9, 
   3.6272598721558123`*^9}, {3.6272599282177877`*^9, 3.6272599376705437`*^9}, 
   3.6272601062034483`*^9, {3.627260146481222*^9, 3.6272601484520187`*^9}, {
   3.627260221489134*^9, 3.627260242328454*^9}, {3.6272602889285097`*^9, 
   3.627260292854267*^9}, {3.627261996006768*^9, 3.627262005287018*^9}, {
   3.627262122350112*^9, 3.627262132081777*^9}, {3.6361176517364063`*^9, 
   3.636117699180196*^9}, {3.636117732013047*^9, 3.636117733376137*^9}, {
   3.6361178264291487`*^9, 3.636117838120749*^9}, 3.636122736420334*^9, {
   3.636122809517578*^9, 3.636122810296475*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"R", "+", "RE", "-", 
      RowBox[{"R", " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
      RowBox[{"RE", " ", 
       RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"R", " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "+", 
      RowBox[{"RE", " ", 
       RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.636225550299943*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.636225550302902*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.6362255503051643`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Delta]"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.6362255503312483`*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"R", " ", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "+", 
     RowBox[{"RE", " ", 
      RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], ")"}], "2"], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"R", "+", "RE", "-", 
        RowBox[{"R", " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
        RowBox[{"RE", " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "+", 
        RowBox[{"RE", " ", 
         RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], ")"}], "2"]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.636225552295237*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"R", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Beta]", "-", "\[Delta]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"R", "+", "RE"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], ")"}], "2"], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["R", "2"], "+", 
     RowBox[{"R", " ", "RE"}], "+", 
     SuperscriptBox["RE", "2"], "-", 
     RowBox[{"R", " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", "RE"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
     RowBox[{"R", " ", "RE", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Beta]", "-", "\[Delta]"}], "]"}]}], "-", 
     RowBox[{"RE", " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", "RE"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.636225555938561*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"R", " ", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "+", 
     RowBox[{"RE", " ", 
      RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"R", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Beta]", "-", "\[Delta]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"R", "+", "RE"}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], ")"}]}], 
  RowBox[{"8", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["R", "2"], "+", 
     RowBox[{"R", " ", "RE"}], "+", 
     SuperscriptBox["RE", "2"], "-", 
     RowBox[{"R", " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", "RE"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
     RowBox[{"R", " ", "RE", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Beta]", "-", "\[Delta]"}], "]"}]}], "-", 
     RowBox[{"RE", " ", 
      RowBox[{"(", 
       RowBox[{"R", "+", "RE"}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.636225559574188*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"R", " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "+", 
      RowBox[{"RE", " ", 
       RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"R", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Beta]", "-", "\[Delta]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"R", "+", "RE"}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], ")"}], "2"]}], 
  RowBox[{"16", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["R", "2"], "+", 
      RowBox[{"R", " ", "RE"}], "+", 
      SuperscriptBox["RE", "2"], "-", 
      RowBox[{"R", " ", 
       RowBox[{"(", 
        RowBox[{"R", "+", "RE"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
      RowBox[{"R", " ", "RE", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Beta]", "-", "\[Delta]"}], "]"}]}], "-", 
      RowBox[{"RE", " ", 
       RowBox[{"(", 
        RowBox[{"R", "+", "RE"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.6362255725730953`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwUWXc4kN8XLw2itFAkSZQkaaAhHyFJUsksZCsle++99y57773Xtffeq6JS
KqFvSxE/v/ef9znPe8+5n3POPed+zvMe1TCQ0abYtGkTC/WmTf9/S2rP9dd9
khPaLrC+8SxiqyiT4RvGCzB62KXAv7KI83GR0UWMYthxevPs8Pwi3jOzO1kc
l8b4YDnv2NAibnWPFsYwyoJ1aU3hedEi2H0Pp6wfUULe68dtkZ6LWJXUjFA/
rorAar3rprKL+Ow61KQero5n850JPAcWoaD1uyaYUQvd3yN+zvYtoEmUqawx
Wge0GmuC7U4L4D12Nf/HkSdg86CaP8C1gGgKtQyOpKdg8vkYurnjK6jeOifK
H38OkaP5FC3qX1E5PdDdKGsIRyrHtOJv8zC8qyWpHG6ED9LfLx6wnserMx6i
foymCLZ0r1Ew+4LQuIN1HA/NkORvc3Z67jMkd2cK1kabQ1TbWo9X/jNKF7r4
Fo9YQfwYg77nkU/wz9nHee+4PfZqdbGZWn5APP0dd29GVwztbh3uS5iGTXdE
k3ylK8QLw29JNr+BvNs0xbGHbriuyh21eOM1dv40cqiKdsemuoWJZ/cnYTkU
ajl/xAva1ERzLXIY931flZbXeUFaTPS13sUh8Igd/+mq7g0OupGbE68H8L6o
zOhwkg/eqAhwHxLtw72QCT3p4/74rUjdk/WtBdy3jmUwtfpD+mNnZjJpAtWW
Zx8/6AbgfNNO96KkBjyqWCsgsoEYOkJ/pEetBlL0x/o5UgLBs5XyknJxBS4b
3Vjy+RmIeobnA+cvloL+ZCCPYngQKJjvx3em5oHCrfh27YcgeFytaxkeycDS
9NgzdoFg/LFqDnypl4zXgv98vD2CsSwrFeHTFIvOyKNZS6PBkFfiTXlvHYby
H9c75DlDMJj0+N2Or15Ivav3qdoyBDt5M6/NDpsiNNuf6lh7CFonp1IL0pSJ
E1XRCS/GUBR5Tc/HMToSrhtBnoWGoVj0NPdvo/QlA24GnyZbQ1El4OJWwBFC
bJpuS247Egbla4zf5CwjCPsW7iwe8zB47fsUE0HxknRdo96p2B2GZGnL57u6
YoiZ49wzJ/Zw2GcqaQhPxREW0tKdaRMOlcTlx5Sx8aTlXzLP0EA49q5erqT6
G08MBF0C/p2MQGvvmZy17QnkoI360nGnCPw495CluD2e1FXg3t2xCFzK3CF6
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
kMh70bD2ngdkbVozv7yMw2tz3V9K8a7wP0fc540=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 16},
  Frame->True,
  FrameLabel->{{None, None}, {
     FormBox["\"time (hr)\"", TraditionalForm], None}},
  GridLines->Automatic,
  ImageSize->{548.90625, Automatic},
  Method->{},
  PlotRange->{{0, 1}, {-0.2, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.627254701383567*^9, 3.627254836406496*^9, 3.62725500538526*^9, {
   3.627255066726437*^9, 3.627255146092266*^9}, 3.627255390411503*^9, 
   3.627255525902256*^9, {3.6272555561328363`*^9, 3.6272555685730057`*^9}, 
   3.6272559192994947`*^9, 3.627255986228798*^9, 3.627256648350913*^9, 
   3.627256814847739*^9, 3.627256974805352*^9, 3.6272570412180853`*^9, 
   3.627257121838964*^9, 3.627257289540905*^9, 3.627257377790833*^9, 
   3.627257496177137*^9, 3.62725759679272*^9, 3.6272576552057323`*^9, 
   3.6272578756276197`*^9, 3.627257954580162*^9, 3.6272582035944157`*^9, 
   3.627258540401326*^9, 3.627258807952222*^9, 3.627258954600078*^9, 
   3.627259072905921*^9, 3.6272591914730663`*^9, 3.627259421034068*^9, 
   3.6272594783469267`*^9, 3.627259545027635*^9, 3.6272595953446074`*^9, 
   3.6272596380900927`*^9, 3.627259701133325*^9, 3.627259829956346*^9, 
   3.627259875711513*^9, 3.6272599434498796`*^9, 3.627260174482554*^9, 
   3.6272602463719997`*^9, 3.627260299226351*^9, 3.62726039287157*^9, 
   3.627262054584735*^9, 3.627262180989984*^9, 3.636117866445551*^9, 
   3.6361228132275867`*^9, 3.636122875656954*^9, 3.636225598625477*^9}]
}, Open  ]]
},
WindowSize->{1019, 894},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 13628, 341, 974, "Input"],
Cell[14210, 365, 1203, 17, 28, "Output"],
Cell[15416, 384, 1203, 17, 28, "Output"],
Cell[16622, 403, 1356, 23, 48, "Output"],
Cell[17981, 428, 1201, 17, 28, "Output"],
Cell[19185, 447, 1201, 17, 28, "Output"],
Cell[20389, 466, 1201, 17, 28, "Output"],
Cell[21593, 485, 1201, 17, 28, "Output"],
Cell[22797, 504, 1356, 23, 47, "Output"],
Cell[24156, 529, 15427, 258, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39620, 792, 12473, 325, 787, "Input"],
Cell[52096, 1119, 1284, 20, 47, "Output"],
Cell[53383, 1141, 1195, 17, 28, "Output"],
Cell[54581, 1160, 1193, 17, 28, "Output"],
Cell[55777, 1179, 1215, 18, 47, "Output"],
Cell[56995, 1199, 1322, 22, 47, "Output"],
Cell[58320, 1223, 1322, 22, 47, "Output"],
Cell[59645, 1247, 1324, 22, 48, "Output"],
Cell[60972, 1271, 1320, 22, 47, "Output"],
Cell[62295, 1295, 2420, 53, 72, "Output"],
Cell[64718, 1350, 54967, 907, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119722, 2262, 12122, 323, 787, "Input"],
Cell[131847, 2587, 881, 15, 47, "Output"],
Cell[132731, 2604, 789, 12, 28, "Output"],
Cell[133523, 2618, 789, 12, 28, "Output"],
Cell[134315, 2632, 944, 18, 48, "Output"],
Cell[135262, 2652, 916, 17, 47, "Output"],
Cell[136181, 2671, 918, 17, 47, "Output"],
Cell[137102, 2690, 963, 18, 47, "Output"],
Cell[138068, 2710, 917, 17, 47, "Output"],
Cell[138988, 2729, 2039, 49, 72, "Output"],
Cell[141030, 2780, 34237, 568, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175304, 3353, 15834, 395, 889, "Input"],
Cell[191141, 3750, 1679, 33, 40, "Output"],
Cell[192823, 3785, 1196, 17, 28, "Output"],
Cell[194022, 3804, 1198, 17, 28, "Output"],
Cell[195223, 3823, 1353, 23, 48, "Output"],
Cell[196579, 3848, 1977, 43, 55, "Output"],
Cell[198559, 3893, 2085, 45, 55, "Output"],
Cell[200647, 3940, 2315, 52, 53, "Output"],
Cell[202965, 3994, 2376, 54, 57, "Output"],
Cell[205344, 4050, 55300, 912, 410, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
